plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// This 'configurations.all' block can be used for forcing specific AndroidX versions
// if needed, but ensure it's necessary for your project.
// configurations.all {
//     resolutionStrategy {
//         force "androidx.core:core:1.13.1"
//         force "androidx.core:core-ktx:1.13.1"
//     }
// }

android {
    namespace = "com.example.tugas_3_mobile" // Ensure this matches your package name
    compileSdk = 35 // Or your desired compileSdk, e.g., flutter.compileSdkVersion
    ndkVersion = "27.0.12077973" // Or flutter.ndkVersion from gradle.properties

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId = "com.example.tugas_3_mobile" // Ensure this matches your package name
        minSdk = flutter.minSdkVersion
        targetSdk = 35 // Or your desired targetSdk, e.g., flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your signing configuration for release builds.
            // signingConfig = signingConfigs.release
            signingConfig = signingConfigs.debug // Using debug for now, ensure you configure release signing
            // Consider enabling R8/ProGuard for code shrinking and obfuscation
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // It's good practice to define signingConfigs if you plan to release the app
    // signingConfigs {
    //     debug {
    //         // Standard debug signing config
    //     }
    //     release {
    //         // storeFile file("<path_to_your_release_keystore>.jks")
    //         // storePassword System.getenv("KEYSTORE_PASSWORD")
    //         // keyAlias System.getenv("KEY_ALIAS")
    //         // keyPassword System.getenv("KEY_PASSWORD")
    //     }
    // }
}

flutter {
    source = "../.."
}

dependencies {
    // Access kotlin_version from the 'ext' block of the rootProject (defined outside buildscript)
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${rootProject.ext.kotlin_version}"

    // Example of other AndroidX dependencies (uncomment and adjust versions if needed)
    // implementation 'androidx.core:core-ktx:1.13.1' // Example, check for latest stable
    // implementation 'androidx.appcompat:appcompat:1.6.1' // Example, check for latest stable
    // implementation 'com.google.android.material:material:1.12.0' // Example, check for latest stable

    // Core library desugaring dependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5' // Or the latest stable version

    // Standard test dependencies (uncomment if you have tests)
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// Ensure no buildscript {}, allprojects {}, or rootProject.tasks.register('clean', ...) {}
// blocks are present here, as they belong in the top-level build.gradle file.